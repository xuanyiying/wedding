# Wedding Club - 开发环境 Nginx 配置
# 开发环境优化版本

# 注意：这个配置文件将被复制到 /etc/nginx/conf.d/default.conf
# 在这个位置只能包含 server 块，不能包含 http 块

# 客户端配置
client_max_body_size 50M;
client_body_buffer_size 512k;
client_body_timeout 30s;
client_header_timeout 30s;
send_timeout 30s;

# Gzip压缩优化
gzip on;
gzip_vary on;
gzip_min_length 1024;
gzip_proxied any;
gzip_comp_level 6;
gzip_buffers 16 8k;
gzip_http_version 1.1;
gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    text/csv
    application/json
    application/javascript
    application/xml+rss
    application/atom+xml
    application/rss+xml
    application/xhtml+xml
    application/x-font-ttf
    application/x-web-app-manifest+json
    font/opentype
    image/svg+xml
    image/x-icon
    text/x-component;

# 安全头配置
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header X-Content-Type-Options "nosniff" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# 上游服务器配置
upstream api_backend {
    server wedding-api-dev:3000 max_fails=3 fail_timeout=30s;
    
    # 连接池优化
    keepalive 16;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

upstream minio_backend {
    server wedding-minio-dev:9000 weight=1 max_fails=2 fail_timeout=20s;
    
    keepalive 16;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# HTTP主服务器
server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html index.htm;

    # 健康检查端点
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # API代理 - 开发环境优化
    location /api/ {
        # 代理配置
        proxy_pass http://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        # 超时配置
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 缓冲配置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Swagger UI 静态资源
    location /api/v1/docs/ {
        proxy_pass http://api_backend/api/v1/docs/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # 前端直传OSS签名URL路由 - 处理预签名URL请求
    location ~* ^/wedding-media-dev/ {
        # 处理CORS预检请求
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin '*' always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header Access-Control-Max-Age 86400 always;
            add_header Content-Length 0 always;
            add_header Content-Type 'text/plain; charset=utf-8' always;
            return 204;
        }
        
        # 代理到MinIO
        proxy_pass http://minio_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $proxy_host;
        proxy_set_header Connection "";
        
        # 大文件上传支持
        client_max_body_size 100M;
        client_body_buffer_size 1M;
        client_body_timeout 300s;
        
        # 超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # 禁用缓冲以支持大文件流式传输
        proxy_request_buffering off;
        proxy_buffering off;
        
        # CORS头
        add_header Access-Control-Allow-Origin '*' always;
        add_header Access-Control-Expose-Headers 'Content-Length,Content-Range,ETag' always;
    }

    # 静态文件 - 开发环境不缓存
    location ~* \.(woff|woff2|ttf|eot|otf|png|jpg|jpeg|gif|ico|svg|webp|avif|css|js|pdf|doc|docx|zip|tar|gz|mp4|mp3|avi)$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        try_files $uri =404;
    }

    # SPA路由支持
    location / {
        try_files $uri $uri/ /index.html;
        
        # HTML文件不缓存
        location ~* \.html$ {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
    }

    # 安全配置 - 隐藏敏感文件
    location ~ /\. {
        deny all;
    }
    
    location ~ ~$ {
        deny all;
    }
    
    location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
        deny all;
    }

    # 错误页面
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}