version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: wedding-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-wedding_root_dev}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-wedding_dev}
      MYSQL_USER: ${MYSQL_USER:-wedding_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-wedding_dev_pass}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data_dev:/var/lib/mysql
      - ./logs/mysql:/var/log/mysql
      - ../server/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --log-error=/var/log/mysql/error.log
      --log-error-verbosity=2
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER:-wedding_user}", "-p${MYSQL_PASSWORD:-wedding_dev_pass}"]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 40s
    networks:
      - wedding-network

  redis:
    image: redis:7-alpine
    container_name: wedding-redis-dev
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data_dev:/data
      - ./logs/redis:/var/log/redis
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-redis_dev_pass}
      --appendonly yes
      --logfile /var/log/redis/redis.log
      --loglevel notice
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis_dev_pass}", "ping"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 10s
    networks:
      - wedding-network

  minio:
    image: minio/minio:latest
    container_name: wedding-minio-dev
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
      MINIO_CONSOLE_ADDRESS: ${MINIO_CONSOLE_ADDRESS:-:9001}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data_dev:/data
      - ./logs/minio:/var/log/minio
    command: server /data --console-address ":9001" 2>&1 | tee /var/log/minio/minio.log
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 10s
    networks:
      - wedding-network

  api:
    image: ${SERVER_IMAGE:-wedding-server:latest}
    build:
      context: ../server
      dockerfile: Dockerfile.dev
    container_name: wedding-api-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: ${API_PORT:-3000}
      HOST: ${API_HOST:-0.0.0.0}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE:-wedding_dev}
      DB_USER: ${MYSQL_USER:-wedding_user}
      DB_PASSWORD: ${MYSQL_PASSWORD:-wedding_dev_pass}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis_dev_pass}
      OSS_TYPE: ${OSS_TYPE:-minio}
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin123}
      MINIO_BUCKET: ${MINIO_BUCKET:-wedding-bucket}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      HEALTH_CHECK_INTERVAL: ${HEALTH_CHECK_INTERVAL:-30000}
    ports:
      - "${API_PORT:-3000}:${API_PORT:-3000}"
    volumes:
      - ../server:/app
      - /app/node_modules
      - ./logs/api:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT:-3000}/health"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 60s
    networks:
      - wedding-network

  web:
    image: ${WEB_IMAGE:-wedding-web:latest}
    build:
      context: ../web
      dockerfile: Dockerfile.dev
    container_name: wedding-web-dev
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3000}
      VITE_UPLOAD_URL: ${VITE_UPLOAD_URL:-http://localhost:9000}
      NGINX_HOST: ${NGINX_HOST:-localhost}
      NGINX_PORT: ${NGINX_PORT:-8080}
    ports:
      - "${WEB_PORT:-8080}:80"
    volumes:
      - ../web:/app
      - /app/node_modules
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 30s
    networks:
      - wedding-network

volumes:
  mysql_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  minio_data_dev:
    driver: local

networks:
  wedding-network:
    driver: bridge
    name: wedding-network-dev