# Wedding Club - 生产环境 Nginx 配置
# 高性能、安全、负载均衡优化版本

user nginx;
worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 事件模块优化
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式 - 包含性能指标
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'cache="$upstream_cache_status" host="$host"';

    # 访问日志配置
    access_log /var/log/nginx/access.log main buffer=64k flush=5s;
    
    # 错误日志配置
    error_log /var/log/nginx/error.log warn;

    # 性能优化配置
    sendfile on;
    sendfile_max_chunk 1m;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    
    # 客户端配置
    client_max_body_size 100M;
    client_body_buffer_size 1M;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 8k;
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;
    
    # 文件描述符缓存
    open_file_cache max=10000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Gzip压缩优化
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/csv
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/x-font-ttf
        application/x-web-app-manifest+json
        font/opentype
        image/svg+xml
        image/x-icon
        text/x-component;

    # Brotli压缩（如果支持）
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 安全头配置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; media-src 'self'; object-src 'none'; child-src 'none'; frame-ancestors 'self'; base-uri 'self'; form-action 'self';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # 上游服务器配置
    upstream api_backend {
        server wedding-api:3000 max_fails=3 fail_timeout=30s;
        
        # 连接池优化
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    upstream minio_backend {
        server wedding-minio:9000 weight=1 max_fails=2 fail_timeout=20s;
        
        keepalive 64;
        keepalive_requests 500;
        keepalive_timeout 60s;
    }

    # 缓存配置
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:50m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:100m max_size=5g inactive=7d use_temp_path=off;
    proxy_cache_path /var/cache/nginx/images levels=1:2 keys_zone=image_cache:100m max_size=2g inactive=30d use_temp_path=off;
    proxy_temp_path /var/cache/nginx/temp;
    
    # 限流配置 - 生产环境
    limit_req_zone $binary_remote_addr zone=api_limit:20m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=upload_limit:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=login_limit:10m rate=1r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit:20m;
    
    # 地理位置限制（可选）
    # geo $allowed_country {
    #     default 0;
    #     CN 1;
    #     US 1;
    #     JP 1;
    # }

    # HTTP主服务器
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html index.htm;

        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API代理 - 生产环境优化
        location /api/ {
            # 限流配置
            limit_req zone=api_limit burst=50 nodelay;
            limit_conn conn_limit 20;
            
            # 地理位置限制（可选）
            # if ($allowed_country = 0) {
            #     return 403;
            # }
            
            # 代理配置
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # 缓存配置
            proxy_cache api_cache;
            proxy_cache_methods GET HEAD;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_lock on;
            proxy_cache_bypass $http_upgrade $cookie_nocache $arg_nocache;
            proxy_no_cache $http_upgrade $cookie_nocache $arg_nocache;
            
            # 添加缓存状态头
            add_header X-Cache-Status $upstream_cache_status;
            
            # 超时配置
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 缓冲配置
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 16 8k;
            proxy_busy_buffers_size 16k;
        }

        # 登录API特殊限流
        location /api/v1/auth/login {
            limit_req zone=login_limit burst=3 nodelay;
            limit_conn conn_limit 5;
            
            proxy_pass http://api_backend/api/v1/auth/login;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # 禁用缓存
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # 文件服务代理 - 支持所有文件操作
        location /api/v1/files/ {
            proxy_pass http://api_backend/api/v1/files/
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 大文件支持
            client_max_body_size 100M;
            proxy_request_buffering off;
            proxy_buffering off;
            
            # 超时配置
            proxy_connect_timeout 30s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
        }

        # 直传服务代理
        location /api/v1/direct-upload/ {
            proxy_pass http://api_backend/api/v1/direct-upload/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 禁用缓存
            proxy_no_cache 1;
            proxy_cache_bypass 1;

            # 标准超时配置
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # 静态文件缓存 - 生产环境分层策略
        # 字体文件 - 长期缓存
        location ~* \.(woff|woff2|ttf|eot|otf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            try_files $uri =404;
            
            # 启用静态文件缓存
            proxy_cache static_cache;
            proxy_cache_valid 200 1y;
        }
        
        # 图片资源 - 中期缓存
        location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|avif)$ {
            expires 6M;
            add_header Cache-Control "public";
            add_header Vary "Accept-Encoding";
            try_files $uri =404;
            
            # 图片压缩优化
            gzip_static on;
            
            # 启用图片缓存
            proxy_cache image_cache;
            proxy_cache_valid 200 6M;
        }
        
        # CSS和JS文件 - 版本化缓存
        location ~* \.(css|js)$ {
            expires 1M;
            add_header Cache-Control "public";
            add_header Vary "Accept-Encoding";
            try_files $uri =404;
            
            # 启用gzip压缩
            gzip_static on;
            
            # 启用静态文件缓存
            proxy_cache static_cache;
            proxy_cache_valid 200 1M;
        }
        
        # 其他静态资源
        location ~* \.(pdf|doc|docx|zip|tar|gz|mp4|mp3|avi)$ {
            expires 7d;
            add_header Cache-Control "public";
            try_files $uri =404;
            
            # 大文件流式传输
            proxy_max_temp_file_size 0;
        }

        # SPA路由支持
        location / {
            try_files $uri $uri/ /index.html;
            
            # HTML文件不缓存
            location ~* \.html$ {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
            }
        }

        # 安全配置 - 隐藏敏感文件
        location ~ /\. {
            deny all;
        }
        
        location ~ ~$ {
            deny all;
        }
        
        location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
            deny all;
        }

        # 错误页面
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}

# 流配置（如果需要）
# stream {
#     upstream backend {
#         server backend1.example.com:12345;
#         server backend2.example.com:12345;
#     }
# 
#     server {
#         listen 12345;
#         proxy_pass backend;
#     }
# }