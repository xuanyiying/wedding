version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: wedding_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./server/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - wedding-prod-net

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: wedding_redis_prod
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_prod_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - wedding-prod-net

  # MinIO对象存储
  minio:
    image: minio/minio:latest
    container_name: wedding_minio_prod
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"  # S3 API port
      - "9001:9001"  # Console port
    volumes:
      - minio_prod_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - wedding-prod-net

  # 后端API服务 (生产模式)
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: wedding_server_prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV}
      - API_HOST=${API_HOST}
      - PORT=${PORT}
      - DATABASE_URL=${DATABASE_URL}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DIALECT=${DB_DIALECT}
      - DB_LOGGING=${DB_LOGGING}
      - REDIS_URL=${REDIS_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - OSS_TYPE=${OSS_TYPE}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN}
      - UPLOAD_DIR=${UPLOAD_DIR}
      - UPLOAD_MAX_SIZE=${UPLOAD_MAX_SIZE}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE}
      - ALLOWED_IMAGE_TYPES=${ALLOWED_IMAGE_TYPES}
      - ALLOWED_VIDEO_TYPES=${ALLOWED_VIDEO_TYPES}
      - ALLOWED_AUDIO_TYPES=${ALLOWED_AUDIO_TYPES}
      - ALLOWED_TYPES=${ALLOWED_TYPES}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - CORS_CREDENTIALS=${CORS_CREDENTIALS}
      - SECURE_COOKIES=${SECURE_COOKIES}
      - SAME_SITE=${SAME_SITE}
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - LOG_FILE=${LOG_FILE}
      - LOG_ERROR_FILE=${LOG_ERROR_FILE}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - wedding-prod-net

  # 前端Web服务 (生产模式)
  web:
    image: wedding-web-prod:latest
    container_name: wedding_web_prod
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - server
    networks:
      - wedding-prod-net

networks:
  wedding-prod-net:
    driver: bridge

volumes:
  mysql_prod_data:
  redis_prod_data:
  minio_prod_data: